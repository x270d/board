{"version":3,"sources":["api/boards.js","actions/actions.ts","actions/types.ts","components/Modal.tsx","components/Card.tsx","components/EditButtons.tsx","components/CardEditor.tsx","components/ListEditor.tsx","components/List.tsx","components/AddList.tsx","components/Board.tsx","components/Home.tsx","components/Navs.tsx","components/App.tsx","reducers/index.ts","reducers/listsReducer.ts","reducers/cardsReducer.ts","reducers/boardReducer.ts","reducers/boardOrderReducer.ts","index.tsx"],"names":["axios","create","baseURL","getFetchBoard","dispatch","a","boards","get","response1","response2","response3","response4","Promise","all","then","fetchData","data","type","payload","Modal","id","listId","title","desc","activator","useState","show","setShow","Date","date","setDate","headTitle","setHeadTitle","description","setDescription","useDispatch","handleModal","content","Overlay","onClick","ModalBlock","ModalBody","e","stopPropagation","IconClose","className","aria-hidden","Container","Block","H4","TextArea","placeholder","value","name","onChange","target","selected","dateFormat","ButtonsGroup","Button","primary","text","getState","state","cardsById","newTitle","put","changeCardText","danger","stateList","listsById","stateCards","restOfCards","deleted","card","newCards","cards","filter","delCard","createPortal","CSSTransition","in","timeout","classNames","unmountOnExit","Box","document","body","styled","h4","div","button","props","TextareaAutosize","Card","day_one","day_two","cardId","index","hover","setHover","useSelector","day_1","day_2","day","Math","ceil","startHover","endHover","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","CardWrap","color","Title","IconSee","Desc","year","getFullYear","toString","month","getMonth","substring","getDate","formatDate","Clock","p","i","EditButtons","handleSave","saveLabel","handleCancel","EditedButtons","EditButton","success","CardEditor","onSave","onCancel","newText","setNewText","EditCard","autoFocus","event","onKeyDown","keyCode","preventDefault","ListEditor","onClickOutside","handleChangeTitle","deleteList","saveList","useRef","useEffect","handleClick","current","contains","addEventListener","removeEventListener","style","width","marginLeft","padding","List","boardId","boardTitle","list","editingTitle","setEditingTitle","addingCard","setAddingCard","setTitle","toggleAddingCard","addCard","cardText","shortid","generate","trim","newLists","newCard","addNewCard","toggleEditingTitle","editListTitle","changeListTitle","board","boardListId","lists","filterDeleted","restOfLists","delList","snapshot","ListContainer","ListTitle","droppableId","_snapshot","map","key","ToggleAddCard","AddList","toggleAddingList","createList","newBoardList","listTitle","addList","Board","addingList","setAddingListe","Object","values","match","params","console","log","onDragEnd","source","destination","obj","sourceListId","destListId","oldCardIndex","newCardIndex","Array","from","splice","removedCard","newState","patch","sourceCards","destinationCards","moveCard","oldListIndex","newListIndex","removedList","moveList","direction","ListAdd","AddListButton","IconAdd","Home","H1","H3","UL","LI","h1","h3","ul","li","Navs","addShow","setAddShow","boardOrder","order","history","useHistory","deleteNav","orderBoard","arrOrder","newOrder","idx","newOrderBoard","push","length","delNav","StyledLink","to","Add","InputContainer","newBoard","addNewBoard","IconPlus","NavLink","attrs","activeClassName","App","Header","Logo","path","exact","component","Link","rootReducer","combineReducers","action","cardIds","keys","includes","reduce","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.acc2ad52.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://my-board-bbc06.firebaseio.com\",\r\n});\r\n//  http://localhost:3001\r\n","import {\r\n  FETCH_BOARD_DATA,\r\n  MOVE_LIST,\r\n  MOVE_CARD,\r\n  ADD_LIST,\r\n  CHANGE_CARD_TEXT,\r\n  ADD_CARD,\r\n  DELETE_LIST,\r\n  CHANGE_LIST_TITLE,\r\n  DELETE_CARD,\r\n  ADD_NEW_BOARD,\r\n  DEL_NAV,\r\n  Board,\r\n} from \"./types\";\r\nimport { Dispatch } from \"redux\";\r\nimport shortid from \"shortid\";\r\n\r\nimport boards from \"../api/boards\";\r\n\r\nimport { State, MoveCard, MoveList } from \"../types\";\r\n\r\nexport const getFetchBoard = () => async (dispatch: Dispatch) => {\r\n  const response1 = await boards.get(\"/board.json\");\r\n  const response2 = await boards.get(\"/listsById.json\");\r\n  const response3 = await boards.get(\"/cardsById.json\");\r\n  const response4 = await boards.get(\"/boardsOrder.json\");\r\n  Promise.all([response1, response2, response3, response4]).then(\r\n    ([response1, response2, response3, response4]) => {\r\n      dispatch(fetchData([response1, response2, response3, response4]));\r\n    }\r\n  );\r\n};\r\n\r\nexport const fetchData = (data: any) => {\r\n  return {\r\n    type: FETCH_BOARD_DATA,\r\n    payload: { data },\r\n  };\r\n};\r\n\r\nexport const addNewBoard = (title: string) => async (\r\n  dispatch: Dispatch<Board>,\r\n  getState: () => State\r\n) => {\r\n  const orderBoard: any = getState().boardOrder;\r\n  const state = getState().board;\r\n  const id = shortid.generate();\r\n\r\n  const newBoard = {\r\n    ...state,\r\n    [id]: {\r\n      id: id,\r\n      title: title,\r\n      lists: [],\r\n    },\r\n  };\r\n\r\n  const newOrder = {\r\n    order: [...orderBoard.order, id],\r\n  };\r\n\r\n  dispatch({\r\n    type: ADD_NEW_BOARD,\r\n    payload: { newOrder, newBoard },\r\n  });\r\n\r\n  await boards.put(\"/board.json\", newBoard);\r\n  await boards.put(\"/boardsOrder.json\", newOrder);\r\n};\r\n\r\nexport const delNav = (id: string, history: any) => async (\r\n  dispatch: Dispatch<Board>,\r\n  getState: () => State\r\n) => {\r\n  const orderBoard: any = getState().boardOrder;\r\n  const state = getState().board;\r\n\r\n  const arrOrder = orderBoard.order;\r\n  const newOrder = arrOrder.filter((idx: string) => idx !== id);\r\n  const newOrderBoard = {\r\n    order: newOrder,\r\n  };\r\n\r\n  const { [id]: deletedList, ...restOfLists } = state;\r\n\r\n  dispatch({\r\n    type: DEL_NAV,\r\n    payload: { restOfLists, newOrderBoard },\r\n  });\r\n\r\n  await boards.put(\"/board.json\", { ...restOfLists });\r\n  await boards.put(\"/boardsOrder.json\", newOrderBoard);\r\n  history.push(`/${newOrder[newOrder.length - 1]}`);\r\n};\r\n\r\nexport const moveList = (\r\n  oldListIndex: number,\r\n  newListIndex: number,\r\n  boardId: string\r\n) => async (dispatch: Dispatch<Board>, getState: () => State) => {\r\n  const state = getState().board;\r\n  const boardListId = state[boardId].lists;\r\n  const newLists = Array.from(boardListId);\r\n  const [removedList] = newLists.splice(oldListIndex, 1);\r\n  newLists.splice(newListIndex, 0, removedList);\r\n  const title = state[boardId].title;\r\n\r\n  const newBoardList = {\r\n    ...state,\r\n    [boardId]: {\r\n      title: title,\r\n      id: boardId,\r\n      lists: newLists,\r\n    },\r\n  };\r\n\r\n  dispatch({ type: MOVE_LIST, payload: newBoardList });\r\n  await boards.patch(\"/board.json\", newBoardList);\r\n};\r\n\r\nexport const moveCard = ({\r\n  sourceListId,\r\n  destListId,\r\n  oldCardIndex,\r\n  newCardIndex,\r\n}: MoveCard & MoveList) => async (\r\n  dispatch: Dispatch<Board>,\r\n  getState: () => State\r\n) => {\r\n  const state = getState().listsById;\r\n  if (sourceListId === destListId) {\r\n    const newCards: string[] = Array.from(state[sourceListId].cards);\r\n    const [removedCard] = newCards.splice(oldCardIndex, 1);\r\n    newCards.splice(newCardIndex, 0, removedCard);\r\n    const newState = {\r\n      ...state,\r\n      [sourceListId]: { ...state[sourceListId], cards: newCards },\r\n    };\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: newState,\r\n    });\r\n    await boards.patch(\"/listsById.json\", newState);\r\n  } else {\r\n    const sourceCards = Array.from(getState().listsById[sourceListId].cards);\r\n    const [removedCard] = sourceCards.splice(oldCardIndex, 1);\r\n    const destinationCards = Array.from(getState().listsById[destListId].cards);\r\n    destinationCards.splice(newCardIndex, 0, removedCard);\r\n    const newState = {\r\n      ...state,\r\n      [sourceListId]: { ...state[sourceListId], cards: sourceCards },\r\n      [destListId]: { ...state[destListId], cards: destinationCards },\r\n    };\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: newState,\r\n    });\r\n    await boards.patch(\"/listsById.json\", newState);\r\n  }\r\n};\r\n\r\nexport const addList = (\r\n  title: string,\r\n  boardId: string,\r\n  boardTitle: string\r\n) => async (dispatch: Dispatch<Board>, getState: () => State) => {\r\n  const id = shortid.generate();\r\n  const state: any = getState().board;\r\n  const lists = getState().listsById;\r\n\r\n  const newLists = {\r\n    ...lists,\r\n    [id]: { id: id, title: title, cards: [] },\r\n  };\r\n\r\n  const boardListId = state[boardId].lists;\r\n\r\n  const newBoardList = {\r\n    ...state,\r\n    [boardId]: {\r\n      id: boardId.toString(),\r\n      title: boardTitle,\r\n      lists: boardListId ? [...boardListId, id] : [id],\r\n    },\r\n  };\r\n\r\n  dispatch({\r\n    type: ADD_LIST,\r\n    payload: { listId: id, listTitle: title, newLists, boardId, newBoardList },\r\n  });\r\n  await boards.put(\"/board.json\", newBoardList);\r\n  await boards.put(\"/listsById.json\", newLists);\r\n};\r\n\r\nexport const addNewCard = (\r\n  cardText: string,\r\n  cardId: string,\r\n  listId: string,\r\n  data: string\r\n) => async (dispatch: Dispatch<Board>, getState: () => State) => {\r\n  const stateList: any = getState().listsById;\r\n  const stateCards = getState().cardsById;\r\n  const newLists = {\r\n    ...stateList,\r\n    [listId]: {\r\n      ...stateList[listId],\r\n      cards: [...stateList[listId].cards, cardId],\r\n    },\r\n  };\r\n\r\n  const newCard = {\r\n    ...stateCards,\r\n    [cardId]: { text: cardText, id: cardId, data: data },\r\n  };\r\n\r\n  dispatch({\r\n    type: ADD_CARD,\r\n    payload: {\r\n      newLists,\r\n      newCard,\r\n    },\r\n  });\r\n  await boards.put(\"/listsById.json\", newLists);\r\n  await boards.put(\"/cardsById.json\", newCard);\r\n};\r\n\r\nexport const delList = (\r\n  listId: string,\r\n  cards: string[],\r\n  boardId: string,\r\n  boardTitle: string\r\n) => async (dispatch: Dispatch<Board>, getState: () => State) => {\r\n  const state = getState().board;\r\n  const list = getState().listsById;\r\n  const boardListId = state[boardId].lists;\r\n  const filterDeleted = (id: string) => id !== listId;\r\n  const lists = boardListId.filter(filterDeleted);\r\n\r\n  const newLists = {\r\n    ...state,\r\n    [boardId]: {\r\n      id: boardId.toString(),\r\n      title: boardTitle,\r\n      lists: lists,\r\n    },\r\n  };\r\n\r\n  const { [listId]: deletedList, ...restOfLists } = list;\r\n\r\n  dispatch({\r\n    type: DELETE_LIST,\r\n    payload: { listId, cards, newLists, restOfLists },\r\n  });\r\n\r\n  await boards.put(\"/board.json\", newLists);\r\n  await boards.put(\"/listsById.json\", { ...restOfLists });\r\n};\r\n\r\nexport const changeListTitle = (listId: string, title: string) => async (\r\n  dispatch: Dispatch<Board>,\r\n  getState: () => State\r\n) => {\r\n  const state = getState().listsById;\r\n\r\n  const newLists = {\r\n    ...state,\r\n    [listId]: { ...state[listId], title: title },\r\n  };\r\n  dispatch({\r\n    type: CHANGE_LIST_TITLE,\r\n    payload: newLists,\r\n  });\r\n\r\n  await boards.put(\"/listsById.json\", newLists);\r\n};\r\n\r\nexport const delCard = (id: number, listId: string) => async (\r\n  dispatch: Dispatch<Board>,\r\n  getState: () => State\r\n) => {\r\n  const stateList = getState().listsById;\r\n  const stateCards = getState().cardsById;\r\n\r\n  const { [id]: deletedCard, ...restOfCards } = stateCards;\r\n\r\n  const deleted = (card: any) => card !== id;\r\n  const newCards = {\r\n    ...stateList,\r\n    [listId]: {\r\n      ...stateList[listId],\r\n      cards: stateList[listId].cards.filter(deleted),\r\n    },\r\n  };\r\n\r\n  dispatch({\r\n    type: DELETE_CARD,\r\n    payload: { newCards, restOfCards },\r\n  });\r\n  await boards.put(\"/listsById.json\", newCards);\r\n  await boards.put(\"/cardsById.json\", restOfCards);\r\n};\r\n\r\nexport const changeCardText = (\r\n  id: number,\r\n  text: string,\r\n  date: Date,\r\n  desc: string\r\n) => async (dispatch: Dispatch<Board>, getState: () => State) => {\r\n  const state = getState().cardsById;\r\n  const newTitle = {\r\n    ...state,\r\n    [id]: { ...state[id], text: text, data: date, description: desc },\r\n  };\r\n  dispatch({\r\n    type: CHANGE_CARD_TEXT,\r\n    payload: newTitle,\r\n  });\r\n  await boards.put(\"/cardsById.json\", newTitle);\r\n};\r\n","//Board\r\n\r\nimport { ListsById, CardsById, DelList, Add, Del } from \"../types\";\r\n\r\nexport const FETCH_BOARD_DATA = \"FETCH_BOARD_DATA\";\r\ntype FetchBoardData = {\r\n  type: typeof FETCH_BOARD_DATA;\r\n  payload: any;\r\n};\r\n\r\nexport const ADD_NEW_BOARD = \"ADD_NEW_BOARD\";\r\ntype AddNewBoard = {\r\n  type: typeof ADD_NEW_BOARD;\r\n  payload: any;\r\n};\r\n\r\nexport const DEL_NAV = \"DEL_NAV\";\r\ntype delNav = {\r\n  type: typeof DEL_NAV;\r\n  payload: any;\r\n};\r\n\r\nexport const MOVE_LIST = \"MOVE_LIST\";\r\ntype MovedList = {\r\n  type: typeof MOVE_LIST;\r\n  payload: any;\r\n};\r\n\r\nexport const MOVE_CARD = \"MOVE_CARD\";\r\ntype MovedCard = {\r\n  type: typeof MOVE_CARD;\r\n  payload: ListsById;\r\n};\r\n\r\nexport const ADD_LIST = \"ADD_LIST\";\r\ntype AddList = {\r\n  type: typeof ADD_LIST;\r\n  payload: any;\r\n};\r\n\r\nexport const ADD_CARD = \"ADD_CARD\";\r\ntype AddCard = {\r\n  type: typeof ADD_CARD;\r\n  payload: Add;\r\n};\r\n\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\ntype DeleteList = {\r\n  type: typeof DELETE_LIST;\r\n  payload: DelList;\r\n};\r\n\r\nexport const CHANGE_LIST_TITLE = \"CHANGE_LIST_TITLE\";\r\ntype ChangeListTitle = {\r\n  type: typeof CHANGE_LIST_TITLE;\r\n  payload: ListsById;\r\n};\r\n\r\nexport const DELETE_CARD = \"DELETE_CARD\";\r\ntype DeleteCard = {\r\n  type: typeof DELETE_CARD;\r\n  payload: Del;\r\n};\r\n\r\nexport const CHANGE_CARD_TEXT = \"CHANGE_CARD_TEXT\";\r\ntype ChangeCardText = {\r\n  type: typeof CHANGE_CARD_TEXT;\r\n  payload: CardsById;\r\n};\r\n\r\nexport type Board =\r\n  | AddNewBoard\r\n  | FetchBoardData\r\n  | delNav\r\n  | MovedList\r\n  | AddList\r\n  | AddCard\r\n  | DeleteList\r\n  | ChangeListTitle\r\n  | DeleteCard\r\n  | ChangeCardText\r\n  | MovedCard;\r\n","import React, { useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { createPortal } from \"react-dom\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { changeCardText, delCard } from \"../actions/actions\";\r\n\r\ntype IProps = {\r\n  id: number;\r\n  listId: string;\r\n  title: string;\r\n  desc: string;\r\n  activator: any;\r\n};\r\n\r\nconst Modal = ({ id, listId, title, desc, activator }: IProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n  const [headTitle, setHeadTitle] = useState(title);\r\n  const [description, setDescription] = useState(desc);\r\n  const dispatch = useDispatch();\r\n  const handleModal = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const editTask = () => {\r\n    const text = headTitle;\r\n    const desc = description;\r\n    dispatch(changeCardText(id, text, date, desc));\r\n    setShow(false);\r\n  };\r\n\r\n  const deleteCard = () => {\r\n    dispatch(delCard(id, listId));\r\n  };\r\n\r\n  const content = (\r\n    <Overlay onClick={handleModal}>\r\n      <ModalBlock>\r\n        <ModalBody onClick={(e) => e.stopPropagation()}>\r\n          <IconClose>\r\n            <i\r\n              className='fa fa-times fa-lg'\r\n              onClick={handleModal}\r\n              aria-hidden='true'\r\n            />\r\n          </IconClose>\r\n          <Container>\r\n            <Block>\r\n              <H4>Title:</H4>\r\n              <TextArea\r\n                placeholder='Edit title'\r\n                value={headTitle}\r\n                name='headTitle'\r\n                onChange={(e) => setHeadTitle(e.target.value)}\r\n              />\r\n            </Block>\r\n            <Block>\r\n              <H4>Description:</H4>\r\n              <TextArea\r\n                placeholder='Edit description'\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                name='description'\r\n                value={description}\r\n              />\r\n            </Block>\r\n            <Block>\r\n              <H4>Date of completion</H4>\r\n              <DatePicker\r\n                selected={date}\r\n                dateFormat='dd/MM/yyyy'\r\n                onChange={(data: Date) => setDate(data)}\r\n              />\r\n            </Block>\r\n\r\n            <ButtonsGroup>\r\n              <Button primary onClick={editTask}>\r\n                Save\r\n              </Button>\r\n              <Button danger onClick={deleteCard}>\r\n                Delete\r\n              </Button>\r\n            </ButtonsGroup>\r\n          </Container>\r\n        </ModalBody>\r\n      </ModalBlock>\r\n    </Overlay>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {activator({ setShow })}\r\n      {createPortal(\r\n        <CSSTransition\r\n          in={show}\r\n          timeout={120}\r\n          classNames='modal-transition'\r\n          unmountOnExit\r\n        >\r\n          {() => <Box>{content}</Box>}\r\n        </CSSTransition>,\r\n        document.body\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst H4 = styled.h4`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Block = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-width: 100%;\r\n`;\r\n\r\nconst IconClose = styled.div`\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\ntype ButtonProps = {\r\n  primary?: boolean;\r\n  danger?: boolean;\r\n};\r\n\r\nconst Button = styled.button<ButtonProps>`\r\n  ${(props) => {\r\n    if (props.primary) {\r\n      return `background: #007bff;`;\r\n    } else if (props.danger) {\r\n      return `background: #dc3545;`;\r\n    }\r\n  }}\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst ButtonsGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 98;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 7;\r\n`;\r\n\r\nconst ModalBlock = styled.div`\r\n  position: relative;\r\n  z-index: 99;\r\n  width: 100%;\r\n  max-width: 20rem;\r\n  max-height: 100%;\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  margin: 20px 0;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  z-index: 999;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TextArea = styled(TextareaAutosize)`\r\n  max-width: 255px;\r\n  width: 100%;\r\n  border: none;\r\n  resize: none;\r\n  outline: none;\r\n  font-size: 15px;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Box = styled.div`\r\ntransition: opacity 0.3s;\r\n  &.modal-transition-enter ${Overlay} {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.modal-transition-active ${Overlay}{\r\n    opacity: 1;\r\n    transition: opacity 200ms;\r\n  }\r\n\r\n  &.modal-transition-exit ${Overlay}{\r\n    opacity: 1;\r\n  }\r\n\r\n  &.modal-transition-exit-active ${Overlay}{\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n  }\r\n\r\n  &.modal-transition-enter ${ModalBlock} {\r\n    opacity: 0;\r\n    transform: scale(0.95) translateY(-30px);\r\n  }\r\n  &.modal-transition-enter-active ${ModalBlock}{\r\n    opacity: 1;\r\n    transform: translateX(0) translateY(0);\r\n    transition: opacity 200ms, transform 200ms;\r\n  }\r\n  &.modal-transition-exit ${ModalBlock} {\r\n    opacity: 1;\r\n  }\r\n  &.modal-transition-exit-active ${ModalBlock} {\r\n    opacity: 0;\r\n    transform: scale(0.95) translateY(-30px);\r\n    transition: opacity 200ms, transform 200ms;\r\n  }\r\n}`;\r\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport Modal from \"./Modal\";\n// import \"../styles/Card.css\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../reducers\";\n\ntype IProps = {\n  cardId: string;\n  index: number;\n  listId: string;\n};\n\nconst Card = ({ cardId, index, listId }: IProps) => {\n  const [hover, setHover] = useState(false);\n  const card = useSelector((state: RootState) => state.cardsById[cardId]);\n\n  const day_1 = new Date();\n  const day_2 = card.data ? new Date(card.data) : \"0\";\n\n  const compareDates = (day_one: any, day_two: any) => {\n    return Math.ceil(\n      ((day_one as number) - (day_two as number)) / (60 * 60 * 24 * 1000)\n    );\n  };\n\n  const day = compareDates(day_2, day_1);\n\n  const startHover = () => setHover(true);\n  const endHover = () => setHover(false);\n\n  const formatDate = (date: Date) => {\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 101).toString().substring(1);\n    const day = (date.getDate() + 100).toString().substring(1);\n    return day + \"/\" + month + \"/\" + year;\n  };\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided) => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          onMouseEnter={startHover}\n          onMouseLeave={endHover}\n        >\n          <CardWrap color={day <= 3 ? \"#fb7a87\" : \"#fff\"}>\n            <Modal\n              activator={({ setShow }: any) => (\n                <Title onClick={() => setShow(true)}>\n                  {card.text}\n                  {hover && (\n                    <IconSee>\n                      <i className='fa fa-pencil-square-o' aria-hidden='true' />\n                    </IconSee>\n                  )}\n                </Title>\n              )}\n              title={card.text}\n              desc={card.desc}\n              id={card.id}\n              listId={listId}\n            />\n\n            {card.data && (\n              <Desc>\n                Deadline: {formatDate(new Date(card.data))}\n                <Clock className='fa fa-clock-o' aria-hidden='true' />\n                left {day} {day === 1 ? \"day\" : \"days\"}\n              </Desc>\n            )}\n          </CardWrap>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n\nconst IconSee = styled.div`\n  float: right;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  cursor: pointer;\n  background: white;\n  margin: 5px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 1px 0 rgba(9, 45, 66, 0.25);\n  font-size: 15px;\n  overflow-wrap: break-word;\n  min-height: 18px;\n  &:hover {\n    background: #f5f6f7;\n  }\n`;\n\nconst Desc = styled.p`\n  line-height: 22px;\n`;\n\nconst Title = styled.div`\n  padding-bottom: 15px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Clock = styled.i`\n  padding: 0 10px;\n`;\n\nconst CardWrap = styled.div`\n  padding: 8px;\n  borderradius: 3px;\n  background: ${(props) => props.color};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype IProps = {\n  handleSave: () => void;\n  saveLabel: string;\n  handleCancel: () => void;\n};\n\nconst EditButtons = ({ handleSave, saveLabel, handleCancel }: IProps) => (\n  <EditedButtons>\n    <EditButton onClick={handleSave} success>\n      {saveLabel}\n    </EditButton>\n    <EditButton danger onClick={handleCancel}>\n      <i className='fa fa-times' aria-hidden='true' /> Cancel\n    </EditButton>\n  </EditedButtons>\n);\n\nexport default EditButtons;\n\ntype ButtonProps = {\n  success?: boolean;\n  danger?: boolean;\n};\n\nconst EditedButtons = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst EditButton = styled.div<ButtonProps>`\n  ${(props) => {\n    if (props.success) {\n      return `background: #28a745;`;\n    } else if (props.danger) {\n      return `background: #dc3545;`;\n    }\n  }}\n  cursor: pointer;\n  margin: 0 5px 10px;\n  padding: 8px 15px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n  outline: none;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n","import React, { useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\nimport styled from \"styled-components\";\n\ntype IProps = {\n  onSave: (newText: string) => void;\n  onCancel: () => void;\n};\n\nconst CardEditor = ({ onSave, onCancel }: IProps) => {\n  const [newText, setNewText] = useState(\"\");\n\n  const onEnter = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      onSave(newText);\n    }\n  };\n  return (\n    <EditCard>\n      <Card>\n        <TextArea\n          autoFocus\n          placeholder='Enter card title'\n          value={newText}\n          onChange={(event) => setNewText(event.target.value)}\n          onKeyDown={onEnter}\n        />\n      </Card>\n      <EditButtons\n        handleSave={() => onSave(newText)}\n        saveLabel='Add card'\n        handleCancel={onCancel}\n      />\n    </EditCard>\n  );\n};\n\nexport default CardEditor;\n\nconst TextArea = styled(TextareaAutosize)`\n  max-width: 255px;\n  width: 100%;\n  border: none;\n  resize: none;\n  outline: none;\n  font-size: 15px;\n`;\n\nconst Card = styled.div`\n  position: relative;\n  cursor: pointer;\n  background: white;\n  margin: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 1px 0 rgba(9, 45, 66, 0.25);\n  font-size: 15px;\n  overflow-wrap: break-word;\n  min-height: 18px;\n`;\n\nconst EditCard = styled.div`\n  &${Card} {\n    min-height: 50px;\n    padding-left: 8px;\n    padding-right: 15px;\n  }\n  &${Card}:hover {\n    background: white;\n  }\n`;\n","import React, { useRef, useEffect } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styled from \"styled-components\";\n\ntype IProps = {\n  onClickOutside: () => void;\n  title: string;\n  handleChangeTitle: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  deleteList?: any;\n  saveList: () => void;\n};\n\nconst ListEditor = ({\n  onClickOutside,\n  title,\n  handleChangeTitle,\n  deleteList,\n  saveList,\n}: IProps) => {\n  const ref = useRef(null);\n\n  const onEnter = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      saveList();\n    }\n  };\n\n  useEffect(() => {\n    const handleClick = (e: any) => {\n      const node: any = ref.current;\n      if (node.contains(e.target)) {\n        return;\n      }\n      onClickOutside();\n    };\n    document.addEventListener(\"click\", handleClick, false);\n    return () => document.removeEventListener(\"click\", handleClick, false);\n  });\n\n  return (\n    <Container ref={ref}>\n      <TextArea\n        autoFocus\n        placeholder='Enter list title...'\n        value={title}\n        onChange={handleChangeTitle}\n        onKeyDown={onEnter}\n        style={{ width: deleteList ? 220 : 245 }}\n      />\n\n      <i\n        className='fa fa-trash'\n        style={{ marginLeft: \"10px\", padding: \"4px\" }}\n        onClick={deleteList}\n        aria-hidden='true'\n      />\n    </Container>\n  );\n};\n\nexport default ListEditor;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TextArea = styled(TextareaAutosize)`\n  margin: 6px 0 5px 6px;\n  border-radius: 3px;\n  border: none;\n  resize: none;\n  outline: none;\n  font-size: 15px;\n  padding: 5px;\n  &:focus {\n    box-shadow: inset 0 0 0 2px #0079bf;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { addNewCard, delList, changeListTitle } from \"../actions/actions\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\n\nimport shortid from \"shortid\";\nimport { RootState } from \"../reducers\";\nimport styled from \"styled-components\";\n\ntype IProps = {\n  listId: string;\n  index: number;\n  boardId: string;\n  boardTitle: string;\n};\n\nconst List = ({ listId, index, boardId, boardTitle }: IProps) => {\n  const list: any = useSelector((state: RootState) => state.listsById[listId]);\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [addingCard, setAddingCard] = useState(false);\n  const [title, setTitle] = useState(list.title);\n\n  const dispatch = useDispatch();\n  const toggleAddingCard = () => setAddingCard(!addingCard);\n\n  const addCard = (cardText: string) => {\n    toggleAddingCard();\n\n    const cardId = shortid.generate();\n    const data = \"\";\n    if (cardText && cardText.trim()) {\n      dispatch(addNewCard(cardText, cardId, listId, data));\n    }\n  };\n\n  const toggleEditingTitle = () => setEditingTitle(!editingTitle);\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n    setTitle(e.target.value);\n\n  const editListTitle = () => {\n    toggleEditingTitle();\n\n    dispatch(changeListTitle(listId, title));\n  };\n\n  const deleteList = () => {\n    const cards = list.cards;\n    dispatch(delList(listId, cards, boardId, boardTitle));\n  };\n\n  if (list === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Draggable draggableId={list.id} index={index}>\n      {(provided, snapshot) => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {editingTitle ? (\n            <ListEditor\n              title={title}\n              handleChangeTitle={handleChangeTitle}\n              saveList={editListTitle}\n              onClickOutside={editListTitle}\n              deleteList={deleteList}\n            />\n          ) : (\n            <ListTitle onClick={toggleEditingTitle}>{list.title}</ListTitle>\n          )}\n\n          <Droppable droppableId={list.id}>\n            {(provided, _snapshot) => (\n              <div ref={provided.innerRef}>\n                {list.cards &&\n                  list.cards.map((cardId: string, index: number) => (\n                    <Card\n                      key={cardId}\n                      cardId={cardId}\n                      index={index}\n                      listId={list.id}\n                    />\n                  ))}\n\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          {addingCard ? (\n            <CardEditor onSave={addCard} onCancel={toggleAddingCard} />\n          ) : (\n            <ToggleAddCard onClick={toggleAddingCard}>\n              <i className='fa fa-plus' aria-hidden='true' />\n              &nbsp; Add a card\n            </ToggleAddCard>\n          )}\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n\nconst ListContainer = styled.div`\n  background: #dfe3e6;\n  flex-shrink: 0;\n  width: 272px;\n  height: fit-content;\n  margin: 10px;\n  margin-right: 0;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n`;\n\nconst ListTitle = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  overflow-wrap: break-word;\n`;\n\nconst ToggleAddCard = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  color: #6b808c;\n  border-radius: 0 0 10px 10px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: rgba(9, 45, 66, 0.13);\n    color: #17394d;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { addList } from \"../actions/actions\";\nimport { useDispatch } from \"react-redux\";\nimport ListEditor from \"./ListEditor\";\nimport EditButtons from \"./EditButtons\";\nimport styled from \"styled-components\";\n\ntype IProps = {\n  toggleAddingList: () => void;\n  boardId: string;\n  boardTitle: string;\n};\n\nconst AddList = ({ toggleAddingList, boardId, boardTitle }: IProps) => {\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n    setTitle(e.target.value);\n\n  const createList = () => {\n    toggleAddingList();\n    if (title && title.trim()) {\n      dispatch(addList(title, boardId, boardTitle));\n    }\n  };\n\n  return (\n    <List>\n      <ListEditor\n        title={title}\n        handleChangeTitle={handleChangeTitle}\n        onClickOutside={toggleAddingList}\n        saveList={createList}\n      />\n\n      <EditButtons\n        handleSave={createList}\n        saveLabel='Add list'\n        handleCancel={toggleAddingList}\n      />\n    </List>\n  );\n};\n\nexport default AddList;\n\nconst List = styled.div`\n  background: #c0c0c0;\n  padding: 2px 2px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { moveList, moveCard, getFetchBoard } from \"../actions/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport List from \"./List\";\nimport AddList from \"./AddList\";\nimport { RootState } from \"../reducers\";\nimport styled from \"styled-components\";\n\nconst Board = (props: any) => {\n  const [addingList, setAddingListe] = useState(false);\n  const dispatch = useDispatch();\n  const boardId: any = Object.values(props.match.params);\n  const board = useSelector((state: RootState) => state.board[boardId]);\n  useEffect(() => {\n    dispatch(getFetchBoard());\n  }, [dispatch]);\n\n  const toggleAddingList = () => setAddingListe(!addingList);\n\n  const handleDragEnd = ({ source, destination, type }: DropResult) => {\n    if (!destination) return;\n\n    if (type === \"COLUMN\") {\n      if (source.index !== destination.index) {\n        const oldListIndex = source.index;\n        const newListIndex = destination.index;\n        dispatch(moveList(oldListIndex, newListIndex, boardId));\n      }\n      return;\n    }\n\n    if (\n      source.index !== destination.index ||\n      source.droppableId !== destination.droppableId\n    ) {\n      const obj = {\n        sourceListId: source.droppableId,\n        destListId: destination.droppableId,\n        oldCardIndex: source.index,\n        newCardIndex: destination.index,\n      };\n      dispatch(moveCard(obj));\n    }\n  };\n\n  if (!board) {\n    return <div></div>;\n  }\n  console.log(boardId);\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId='board' direction='horizontal' type='COLUMN'>\n        {(provided, _snapshot) => (\n          <Container ref={provided.innerRef}>\n            {board.lists\n              ? board.lists.map((listId: string, index: number) => {\n                  return (\n                    <List\n                      boardId={boardId}\n                      listId={listId}\n                      key={listId}\n                      index={index}\n                      boardTitle={board.title}\n                    />\n                  );\n                })\n              : \"\"}\n\n            {provided.placeholder}\n\n            <ListAdd>\n              {addingList ? (\n                <AddList\n                  boardId={boardId.toString()}\n                  boardTitle={board.title}\n                  toggleAddingList={toggleAddingList}\n                />\n              ) : (\n                <AddListButton onClick={toggleAddingList}>\n                  <IconAdd>\n                    <i className='fa fa-plus' aria-hidden='true' />\n                  </IconAdd>{\" \"}\n                  Add list\n                </AddListButton>\n              )}\n            </ListAdd>\n          </Container>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst ListAdd = styled.div`\n  width: 272px;\n  margin: 10px;\n  flex-shrink: 0;\n`;\nconst AddListButton = styled.div`\n  background-color: rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  min-height: 32px;\n  padding: 5px 8px;\n  transition: background-color 85ms ease-in, opacity 40ms ease-in,\n    border-color 85ms ease-in;\n  height: fit-content;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.24);\n  }\n`;\n\nconst IconAdd = styled.div`\n  padding: 0 10px;\n`;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Container>\r\n      <H1>Тестовое задание, React</H1>\r\n      <H3>\r\n        Необходимо реализовать приложение таск-менеджер (список задач). Задача\r\n        состоит из заголовка, описания и срока завершения. В списке должны\r\n        отображаться заголовки задач и сроки. При приближении срока \"меньше 3\r\n        дня\" дня строка с задачей должна менять цвет. При превышении срока строк\r\n        с задачей должна подсвечиваться красным. Задачи должны быть\r\n        сгруппированы по группам (у группы должен быть заголовок), группа - в\r\n        отдельном табе.\r\n      </H3>\r\n      <h4>Функции:</h4>\r\n      <UL>\r\n        <LI>Добавить новую задачу</LI>\r\n        <LI>Редактировать задачу</LI>\r\n        <LI>Просмотреть задачу</LI>\r\n        <LI>Закрыть задачу</LI>\r\n        <LI>Передвинуть задачу по списку (драг энд дропом)</LI>\r\n        <LI>Перемещение задач из группы в группу (любым способом)</LI>\r\n        <h4>Реализация:</h4>\r\n      </UL>\r\n      <UL>\r\n        <LI>Использование ReactJS (только функциональные компоненты и хуки)</LI>\r\n        <LI>Использование TypeScript</LI>\r\n        <LI>Реализация имитации работы с API (mock API)</LI>\r\n        <LI>Использование Redux (только через хуки)</LI>\r\n        <LI>\r\n          Использование CSS на Styled Components. Вёрстка на CSS Grids.\r\n          Лаконичный дизайн на свой вкус.\r\n        </LI>\r\n        <LI>\r\n          Переключение табов групп должно контролироваться через react-router\r\n        </LI>\r\n        <LI>\r\n          Принадлежность задания к группе - через локальное состояние на React\r\n          Hooks\r\n        </LI>\r\n      </UL>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  margin: 20px auto;\r\n  padding: 30px 25px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst UL = styled.ul`\r\n  list-style-position: inside;\r\n`;\r\n\r\nconst LI = styled.li`\r\n  padding-bottom: 10px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFetchBoard, addNewBoard, delNav } from \"../actions/actions\";\r\nimport { RootState } from \"../reducers\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Navs() {\r\n  const [addShow, setAddShow] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const boardOrder = useSelector((state: RootState) => state.boardOrder.order);\r\n  const boards = useSelector((state: RootState) => state.board);\r\n  const history = useHistory();\r\n  console.log(boardOrder);\r\n  useEffect(() => {\r\n    dispatch(getFetchBoard());\r\n  }, [dispatch]);\r\n\r\n  const deleteNav = (id: string) => {\r\n    dispatch(delNav(id, history));\r\n  };\r\n\r\n  const renderBoards = () => {\r\n    return boardOrder.map((boardId: string) => {\r\n      const board = boards[boardId];\r\n\r\n      return (\r\n        <StyledLink key={boardId} to={`/${board.id}`}>\r\n          {board.title}\r\n\r\n          <IconClose\r\n            className='fa fa-times fa-lg'\r\n            onClick={() => deleteNav(boardId)}\r\n            aria-hidden='true'\r\n          />\r\n        </StyledLink>\r\n      );\r\n    });\r\n  };\r\n\r\n  const AddNav = () => {\r\n    if (title && title.trim()) {\r\n      dispatch(addNewBoard(title));\r\n    }\r\n    setAddShow(false);\r\n  };\r\n\r\n  if (!boardOrder) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {renderBoards()}{\" \"}\r\n      <Add>\r\n        {addShow ? (\r\n          <InputContainer>\r\n            <TextareaAutosize\r\n              autoFocus\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <button onClick={AddNav}>add</button>\r\n          </InputContainer>\r\n        ) : (\r\n          <IconPlus\r\n            className='fa fa-plus'\r\n            onClick={() => setAddShow(true)}\r\n            aria-hidden='true'\r\n          />\r\n        )}\r\n      </Add>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst IconPlus = styled.i`\r\n  padding: 10px;\r\n`;\r\n\r\nconst IconClose = styled.i`\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Add = styled.div`\r\n  background-color: #fff;\r\n  display: inline-block;\r\n  padding: 0px 10px;\r\n  border: 1px solid #ddd;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst activeClassName = \"nav-item-active\";\r\n\r\nexport const StyledLink = styled(NavLink).attrs({ activeClassName })`\r\n  font-family: \"Roboto\", sans-serif;\r\n  background-color: #fff;\r\n  display: inline-block;\r\n  padding: 10px 25px;\r\n  color: #bbb;\r\n  border-bottom: 1px solid #ddd;\r\n  text-decoration: none;\r\n  &.${activeClassName} {\r\n    background-color: #fff;\r\n    color: #555;\r\n    border: 1px solid #ddd;\r\n    border-top: 2px solid green;\r\n    border-bottom: 1px solid #fff;\r\n    cursor: default;\r\n  }\r\n  &:hover {\r\n    background-color: #e8f3ee;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport Board from \"./Board\";\nimport { Home } from \"./Home\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navs from \"./Navs\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Header>\n          <Logo to='/'>Board</Logo>\n        </Header>\n        <Navs />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/:boardId' component={Board} />\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  background: #50c9c3;\n  background: -webkit-linear-gradient(to right, #96deda, #50c9c3);\n  background: linear-gradient(to right, #96deda, #50c9c3);\n`;\n\nconst Logo = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n`;\n\nconst Header = styled.div`\n  background: #00c6ff;\n  background: -webkit-linear-gradient(to right, #0072ff, #00c6ff);\n  background: linear-gradient(to right, #0072ff, #00c6ff);\n  color: white;\n  padding: 5px 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  text-align: center;\n  font-size: 40px;\n  font-weight: 200;\n  text-align: left;\n  font-family: sans-serif;\n  text-decoration: none;\n`;\n","import { combineReducers } from \"redux\";\r\nimport listsById from \"./listsReducer\";\r\nimport cardsById from \"./cardsReducer\";\r\nimport board from \"./boardReducer\";\r\nimport boardOrder from \"./boardOrderReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  listsById,\r\n  cardsById,\r\n  board,\r\n  boardOrder,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import {\r\n  Board,\r\n  DELETE_CARD,\r\n  MOVE_CARD,\r\n  ADD_CARD,\r\n  DELETE_LIST,\r\n  CHANGE_LIST_TITLE,\r\n  FETCH_BOARD_DATA,\r\n  ADD_LIST,\r\n} from \"../actions/types\";\r\nimport { ListsById } from \"../types\";\r\n\r\nexport default (state: ListsById = {}, action: Board) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_DATA:\r\n      return action.payload.data[1].data;\r\n    case ADD_LIST: {\r\n      const { newLists } = action.payload;\r\n\r\n      return newLists;\r\n    }\r\n    case CHANGE_LIST_TITLE: {\r\n      return action.payload;\r\n    }\r\n    case DELETE_LIST: {\r\n      const { restOfLists } = action.payload;\r\n      return restOfLists;\r\n    }\r\n\r\n    case ADD_CARD: {\r\n      const { newLists } = action.payload;\r\n      return newLists;\r\n    }\r\n    case MOVE_CARD:\r\n      return { ...action.payload };\r\n    case DELETE_CARD: {\r\n      const { newCards } = action.payload;\r\n      return newCards;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  Board,\r\n  FETCH_BOARD_DATA,\r\n  ADD_CARD,\r\n  CHANGE_CARD_TEXT,\r\n  DELETE_CARD,\r\n  DELETE_LIST,\r\n} from \"../actions/types\";\r\nimport { CardsById } from \"../types\";\r\n\r\nexport default (state: CardsById = {}, action: Board) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_DATA:\r\n      return action.payload.data[2].data;\r\n    case ADD_CARD: {\r\n      const { newCard } = action.payload;\r\n      return newCard;\r\n    }\r\n    case CHANGE_CARD_TEXT: {\r\n      return action.payload;\r\n    }\r\n    case DELETE_CARD: {\r\n      const { restOfCards } = action.payload;\r\n      return restOfCards;\r\n    }\r\n    case DELETE_LIST: {\r\n      const { cards: cardIds } = action.payload;\r\n      return Object.keys(state)\r\n        .filter((cardId) => !cardIds.includes(cardId))\r\n        .reduce(\r\n          (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\r\n          {}\r\n        );\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  Board,\r\n  FETCH_BOARD_DATA,\r\n  ADD_LIST,\r\n  MOVE_LIST,\r\n  DELETE_LIST,\r\n  ADD_NEW_BOARD,\r\n  DEL_NAV,\r\n} from \"../actions/types\";\r\n\r\nexport default (state: any = {}, action: Board) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_DATA:\r\n      return action.payload.data[0].data;\r\n    case ADD_LIST: {\r\n      const { newBoardList } = action.payload;\r\n\r\n      return newBoardList;\r\n    }\r\n    case MOVE_LIST: {\r\n      return action.payload;\r\n    }\r\n    case DELETE_LIST: {\r\n      const { newLists } = action.payload;\r\n      return newLists;\r\n    }\r\n    case ADD_NEW_BOARD: {\r\n      const { newBoard } = action.payload;\r\n      return newBoard;\r\n    }\r\n    case DEL_NAV: {\r\n      const { restOfLists } = action.payload;\r\n      return restOfLists;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_BOARD_DATA, ADD_NEW_BOARD, DEL_NAV } from \"../actions/types\";\r\n\r\nexport default (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_DATA: {\r\n      return action.payload.data[3].data;\r\n    }\r\n    case ADD_NEW_BOARD: {\r\n      const { newOrder } = action.payload;\r\n      return newOrder;\r\n    }\r\n    case DEL_NAV: {\r\n      const { newOrderBoard } = action.payload;\r\n      return newOrderBoard;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./reducers\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\nconst store = createStore(rootReducer, enhancer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}